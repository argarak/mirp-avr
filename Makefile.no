# F_CPU=16000000UL
# BOARD=atmega2560
# FILE=mirp
# ACMPORT=$(shell find /dev -name "ttyACM*")
# AVRDUDE_CONF=/etc/avrdude.conf
# BUILD_DIR=build/

# CXX=avr-g++
# CC=avr-gcc
# LD=avr-ld

# COMMON_FLAGS=-DF_CPU=$(F_CPU) -mmcu=$(MCU) $(DOGDEFS)
# COMMON_FLAGS+=-I$(WORKDIR) -I$(U8GM2DIR)
# COMMON_FLAGS+=-g -Os -Wall -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums
# COMMON_FLAGS+=-ffunction-sections -fdata-sections -Wl,--gc-sections
# COMMON_FLAGS+=-Wl,--relax -mcall-prologues
# CFLAGS=$(COMMON_FLAGS) -std=gnu99 -Wstrict-prototypes  

# CSOURCES=$(shell find . -name "*.c")
# CXXSOURCES=$(shell find . -name "*.cpp")
# HEADERS=$(shell find . -name "*.h")

# TARGET=$(FILE)

# all: $(TARGET) link hex
# 	avr-size $(TARGET).elf

# upload:
# 	avrdude -F -p $(MCU) -P $(AVRDUDE_PORT) -c $(AVRDUDE_PROGRAMMER) -v -v -U flash:w:$(TARGET).hex
# 	avr-size $(TARGET).elf

# clean:
# 	/bin/rm $(TARGET).hex $(TARGET).elf $(TARGET).a $(TARGET).dis $(OBJ)

# .elf.hex:
# 	avr-objcopy -O ihex -R .eeprom $< $@

# $(TARGET): $(TARGET).a($(OBJ))
# 	$(LINK.o) $(COMMON_FLAGS) $(TARGET).a $(LOADLIBES) $(LDLIBS) -o $@

# $(TARGET).dis: $(TARGET).elf
# 	avr-objdump -S $< > $@

F_CPU=16000000UL
BOARD=atmega2560
FILE=mirp
BAUDRATE=115200
ACMPORT=/dev/ttyACM0
AVRDUDE_CONF=/etc/avrdude.conf
BUILD_DIR=build/

LD=avr-ld
CXX=avr-g++
CC=avr-gcc
CFLAGS=-mmcu=$(BOARD) -pedantic -DF_CPU=16000000UL -Os -mcall-prologues

CXXSOURCES=$(shell find . -name "*.cpp")
CSOURCES=$(shell find . -name "*.c")
OBJ=$(SOURCES:.c=.o)
HEADERS=$(shell find . -name "*.h")

TARGET=mirp

all: $(CSOURCES)

routine: clean $(TARGET) link hex upload

#$(TARGET): $(HEADERS)

%.o: %.c $(HEADERS)
	$(CC) $(CFLAGS) -c -o $@ $<;

#link:
#	$(CXX) $(CFLAGS) -o "$(BUILD_DIR)$(TARGET).elf" $(BUILD_DIR)*.o

#hex:
#	avr-objcopy -j .text -j .data -O ihex $(BUILD_DIR)$(TARGET).elf $(TARGET).hex

upload:
	avrdude -v -p m2560 -C $(AVRDUDE_CONF) -c wiring -b $(BAUDRATE) -P $(ACMPORT) -D -U flash:w:./$(FILE).hex:i

clean:
	rm -f build/* *.hex $(shell find . -name "*.gch")
